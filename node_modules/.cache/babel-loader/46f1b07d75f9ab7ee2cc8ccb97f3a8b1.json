{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\datdo\\\\CPSC2350\\\\final_project_x\\\\src\\\\App.js\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Weather from \"./components/weather.component\";\nimport Form from \"./components/form.component\";\nimport bootstrap from \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons/css/weather-icons.css\";\nimport React from \"react\";\nimport ShoeCard from \"./components/ShoeCard.component\";\nimport Stack from \"@mui/material/Stack\";\nimport ShowPicsList from \"./components/ShowPicsList.component\";\nimport SwitchesGroup from \"./components/SwitchesGroup.component\"; //api call to api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_key = \"757728b7834ccb1702d58b8378203828\";\nconst options = {\n  method: \"GET\",\n  headers: {\n    \"X-RapidAPI-Host\": \"shoes-collections.p.rapidapi.com\",\n    \"X-RapidAPI-Key\": \"9316a7f1d0msh33be3a2c117ef1cp14cb88jsn855aed988544\"\n  }\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.api_call1 = async () => {\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}\", options);\n      const response = await api_call.json();\n      return response;\n    };\n\n    this.api_call2 = async () => {\n      const api_call = await fetch(\"https://shoes-collections.p.rapidapi.com/shoes\", options);\n      const response = await api_call.json();\n      return response;\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n\n      if (city && country) {\n        const response1 = this.api_call1;\n        console.log(response1.cod);\n\n        if (response1.cod === 200) {\n          let response2 = await this.api_call2();\n          this.setState({\n            city: `${response1.name}, ${response1.sys.country}`,\n            celsius: this.calCelsius(response1.main.temp),\n            temp_max: this.calCelsius(response1.main.temp_max),\n            temp_min: this.calCelsius(response1.main.temp_min),\n            description: response1.weather[0].description,\n            error: false,\n            shoeInfo: response2\n          });\n          this.get_WeatherIcon(this.weatherIcon, response1.weather[0].id);\n        } else {\n          this.setState({\n            error: true\n          });\n        }\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.changeOrderHandler = state => {\n      this.setState({\n        LTH: state\n      });\n    };\n\n    this.state = {\n      city: null,\n      country: null,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: null,\n      shoeInfo: [],\n      LTH: true\n    };\n    this.weatherIcon = {\n      //creating an object of Icons\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({\n          icon: this.weatherIcon.Thunderstorm\n        });\n        break;\n\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({\n          icon: this.weatherIcon.Drizzle\n        });\n        break;\n\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({\n          icon: this.weatherIcon.Rain\n        });\n        break;\n\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({\n          icon: this.weatherIcon.Snow\n        });\n        break;\n\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({\n          icon: this.weatherIcon.Atmosphere\n        });\n        break;\n\n      case rangeId = 800:\n        this.setState({\n          icon: this.weatherIcon.Clear\n        });\n        break;\n\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n        break;\n\n      default:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 10,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          loadweather: this.getWeather,\n          error: this.state.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SwitchesGroup, {\n          OrderHandler: this.changeOrderHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), this.state.error ? null : /*#__PURE__*/_jsxDEV(Weather, {\n          city: this.state.city,\n          country: this.state.country,\n          temp_celsius: this.state.celsius,\n          temp_max: this.state.temp_max,\n          temp_min: this.state.temp_min,\n          description: this.state.description,\n          weatherIcon: this.state.icon,\n          error: this.state.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ShowPicsList, {\n          Information: this.state.shoeInfo,\n          error: this.state.error,\n          LTH: this.state.LTH\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/datdo/CPSC2350/final_project_x/src/App.js"],"names":["logo","Weather","Form","bootstrap","React","ShoeCard","Stack","ShowPicsList","SwitchesGroup","API_key","options","method","headers","App","Component","constructor","api_call1","api_call","fetch","response","json","api_call2","getWeather","e","preventDefault","city","target","elements","value","country","response1","console","log","cod","response2","setState","name","sys","celsius","calCelsius","main","temp","temp_max","temp_min","description","weather","error","shoeInfo","get_WeatherIcon","weatherIcon","id","changeOrderHandler","state","LTH","icon","undefined","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","cell","Math","floor","icons","rangeId","render"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Weather from \"./components/weather.component\";\nimport Form from \"./components/form.component\";\nimport bootstrap from \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons/css/weather-icons.css\";\nimport React from \"react\";\nimport ShoeCard from \"./components/ShoeCard.component\";\nimport Stack from \"@mui/material/Stack\";\nimport ShowPicsList from \"./components/ShowPicsList.component\";\nimport SwitchesGroup from \"./components/SwitchesGroup.component\";\n\n//api call to api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\nconst API_key = \"757728b7834ccb1702d58b8378203828\";\n\nconst options = {\n  method: \"GET\",\n  headers: {\n    \"X-RapidAPI-Host\": \"shoes-collections.p.rapidapi.com\",\n    \"X-RapidAPI-Key\": \"9316a7f1d0msh33be3a2c117ef1cp14cb88jsn855aed988544\",\n  },\n};\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: null,\n      country: null,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: null,\n      shoeInfo: [],\n      LTH: true,\n    };\n\n    this.weatherIcon = {\n      //creating an object of Icons\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\",\n    };\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({ icon: this.weatherIcon.Thunderstorm });\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ icon: this.weatherIcon.Drizzle });\n        break;\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({ icon: this.weatherIcon.Rain });\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ icon: this.weatherIcon.Snow });\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({ icon: this.weatherIcon.Atmosphere });\n        break;\n      case (rangeId = 800):\n        this.setState({ icon: this.weatherIcon.Clear });\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({ icon: this.weatherIcon.Clouds });\n        break;\n      default:\n        this.setState({ icon: this.weatherIcon.Clouds });\n    }\n  }\n\n  api_call1 = async () => {\n    const api_call = await fetch(\n      \"http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}\",\n      options\n    );\n    const response = await api_call.json();\n    return response;\n  };\n\n  api_call2 = async () => {\n    const api_call = await fetch(\n      \"https://shoes-collections.p.rapidapi.com/shoes\",\n      options\n    );\n    const response = await api_call.json();\n    return response;\n  };\n\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    if (city && country) {\n      const response1 = this.api_call1;\n      console.log(response1.cod);\n      if (response1.cod === 200) {\n        let response2 = await this.api_call2();\n\n        this.setState({\n          city: `${response1.name}, ${response1.sys.country}`,\n          celsius: this.calCelsius(response1.main.temp),\n          temp_max: this.calCelsius(response1.main.temp_max),\n          temp_min: this.calCelsius(response1.main.temp_min),\n          description: response1.weather[0].description,\n          error: false,\n          shoeInfo: response2,\n        });\n\n        this.get_WeatherIcon(this.weatherIcon, response1.weather[0].id);\n        \n      } else {\n        this.setState({ error: true });\n      }\n    } else {\n      this.setState({ error: true });\n    }\n  };\n\n  changeOrderHandler = (state) => {\n    this.setState({ LTH: state });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Stack spacing={10} alignItems=\"center\">\n          <Form loadweather={this.getWeather} error={this.state.error} />\n          <SwitchesGroup OrderHandler={this.changeOrderHandler} />\n          {this.state.error ? null : (\n            <Weather\n              city={this.state.city}\n              country={this.state.country}\n              temp_celsius={this.state.celsius}\n              temp_max={this.state.temp_max}\n              temp_min={this.state.temp_min}\n              description={this.state.description}\n              weatherIcon={this.state.icon}\n              error={this.state.error}\n            />\n          )}\n          <ShowPicsList\n            Information={this.state.shoeInfo}\n            error={this.state.error}\n            LTH={this.state.LTH}\n          />\n        </Stack>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}